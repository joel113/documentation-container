version: '3.5'

networks:
  my-network:
    name: network
    driver: bridge

services:
  fakeservice:
    build:
      context: ./fakeservice-go
      dockerfile: Dockerfile
    hostname: fakeservice-go
    ports:
      - 3001:3001
    restart: always
    networks:
      - my-network
  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    ports:
      - 9090:9090
    volumes:
      - /tmp/prometheus:/prometheus
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    restart: always
    networks:
      - my-network
  mimir:
    image: grafana/mimir:latest
    hostname: mimir
    ports:
      - 9009:9009
    volumes:
      - ./mimir.yaml:/etc/mimir.yaml
    command:
      - --config.file=/etc/mimir.yaml
    restart: always
    networks:
      - my-network
  loki:
    image: grafana/loki:latest
    hostname: loki
    ports:
      - 3100:3100
    restart: always
    networks:
      - my-network
  grafana:
    depends_on:
      - prometheus
      - mimir
      - loki
    image: grafana/grafana:latest
    hostname: grafana
    ports:
      - 3000:3000
    volumes:
      - /tmp/grafana:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./grafana-prometheus.yaml:/etc/grafana/provisioning/datasources/grafana-prometheus.yaml
      - ./grafana-mimir.yaml:/etc/grafana/provisioning/datasources/grafana-mimir.yaml
      - ./grafana-loki.yaml:/etc/grafana/provisioning/datasources/grafana-loki.yaml
    restart: always
    networks:
      - my-network
  agent:
    depends_on:
      - grafana
    image: grafana/agent:latest 
    hostname: agent
    volumes:
      - /tmp/agent:/etc/agent/data
      - ./grafana-agent.yaml:/etc/agent/agent.yaml 
    restart: always
    networks:
      - my-network
